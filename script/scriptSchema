

-- Beginning of Schema --

type Draft { 
 idDraft: Int!
 libDraft: String!
}

-- End of Schema --
-- Beginning of Query --

draft(idDraft: Int, libDraft: String, ): Draft
drafts: [Draft]


-- End of Query --
-- Beginning of Resolver --

draft(_, args) {
 return Draft.find({ where: args })
},
drafts() {
 return Draft.findAll()
},

-- End of Resolver --
-- Beginning of Connectors --

const DraftModel = db.define('draft', {
 idDraft: { type: Sequelize.INTEGER },
 libDraft: { type: Sequelize.STRING },
}, {
 timestamps: false,
 freezeTableName: true,
});

const Draft = db.models.draft;

-- End of Connectors --
